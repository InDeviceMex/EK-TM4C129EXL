/*
 * FLASH_Enum.h
 *
 *  Created on: 16 jun. 2020
 *      Author: vyldram
 */

#ifndef XDRIVER_MCU_DRIVER_HEADER_FLASH_FLASH_ENUM_H_
#define XDRIVER_MCU_DRIVER_HEADER_FLASH_FLASH_ENUM_H_

#include <xDriver_MCU/Common/xHeader/MCU_Enum.h>

#define FLASH_TIMEOUT_MAX (9000000UL)

typedef enum
{
    FLASH_enERROR_OK = (UBase_t) MCU_enERROR_OK,
    FLASH_enERROR_POINTER = (UBase_t) MCU_enERROR_POINTER,
    FLASH_enERROR_VALUE = (UBase_t) MCU_enERROR_VALUE,
    FLASH_enERROR_RANGE = (UBase_t) MCU_enERROR_RANGE,
    FLASH_enERROR_EMPTY = (UBase_t) MCU_enERROR_EMPTY,
    FLASH_enERROR_BUSY = (UBase_t) MCU_enERROR_BUSY,
    FLASH_enERROR_TIMEOUT = (UBase_t) MCU_enERROR_TIMEOUT,
    FLASH_enERROR_UNDEF = (UBase_t) MCU_enERROR_UNDEF,
}FLASH_nERROR;

typedef enum
{
    FLASH_enSTATE_DIS = (UBase_t) MCU_enSTATE_DIS,
    FLASH_enSTATE_ENA = (UBase_t) MCU_enSTATE_ENA,
    FLASH_enSTATE_UNDEF = (UBase_t) MCU_enSTATE_UNDEF,
} FLASH_nSTATE;

typedef enum
{
    FLASH_enSTATUS_INACTIVE = (UBase_t) MCU_enSTATUS_INACTIVE,
    FLASH_enSTATUS_ACTIVE = (UBase_t) MCU_enSTATUS_ACTIVE,
    FLASH_enSTATUS_UNDEF = (UBase_t) MCU_enSTATUS_UNDEF,
} FLASH_nSTATUS;

typedef enum
{
    FLASH_enFALSE = (UBase_t) FALSE,
    FLASH_enTRUE = (UBase_t) TRUE,
    FLASH_enBOOLEAN_UNDEF = (UBase_t) BOOLEAN_UNDEF,
}FLASH_nBOOLEAN;

typedef enum
{
    FLASH_enPRI0 = (UBase_t) MCU_enPRI0,
    FLASH_enPRI1 = (UBase_t) MCU_enPRI1,
    FLASH_enPRI2 = (UBase_t) MCU_enPRI2,
    FLASH_enPRI3 = (UBase_t) MCU_enPRI3,
    FLASH_enPRI4 = (UBase_t) MCU_enPRI4,
    FLASH_enPRI5 = (UBase_t) MCU_enPRI5,
    FLASH_enPRI6 = (UBase_t) MCU_enPRI6,
    FLASH_enPRI7 = (UBase_t) MCU_enPRI7,
    FLASH_enPRIMAX = (UBase_t) MCU_enPRIMAX,
    FLASH_enDEFAULT = (UBase_t) MCU_enDEFAULT,
}FLASH_nPRIORITY;

typedef enum
{
    FLASH_enMODULE_0 = 0UL,
    FLASH_enMODULE_MAX = 1UL,
    FLASH_enMODULE_UNDEF = UNDEF_VALUE,
}FLASH_nMODULE;

typedef enum
{
    FLASH_enINT_ACCESS = 0UL,
    FLASH_enINT_PROGRAMMING = 1UL,
    FLASH_enINT_EEPROM = 2UL,
    FLASH_enINT_PUMP_VOL = 3UL,
    FLASH_enINT_INVALID_DATA = 4UL,
    FLASH_enINT_ERRASE_ERROR = 5UL,
    FLASH_enINT_PROGRAM_ERROR = 6UL,
    FLASH_enINT_SW = 7UL,
    FLASH_enINT_MAX = 8UL,
    FLASH_enINT_UNDEF = UNDEF_VALUE,
}FLASH_nINT;

typedef enum
{
    FLASH_enINTMASK_NONE = 0x00UL,
    FLASH_enINTMASK_ACCESS = 0x01UL,
    FLASH_enINTMASK_PROGRAMMING = 0x02UL,
    FLASH_enINTMASK_EEPROM = 0x04UL,

    FLASH_enINTMASK_PUMP_VOL = 0x200UL,
    FLASH_enINTMASK_INVALID_DATA = 0x400UL,
    FLASH_enINTMASK_ERRASE_ERROR = 0x800UL,
    FLASH_enINTMASK_PROGRAM_ERROR = 0x2000UL,
    FLASH_enINTMASK_ALL = 0x2E07UL,
    FLASH_enINTMASK_MAX = 0x4000UL,
    FLASH_enINTMASK_UNDEF = UNDEF_VALUE,
}FLASH_nINTMASK;

typedef enum
{
    FLASH_enPREFETCH_MODE_DUAL = 0UL,
    FLASH_enPREFETCH_MODE_SINGLE = 1UL,
    FLASH_enPREFETCH_MODE_UNDEF = UNDEF_VALUE,
}FLASH_nPREFETCH_MODE;

typedef enum
{
    FLASH_enPROCESS_WORD_WRITE = 0UL,
    FLASH_enPROCESS_PAGE_ERASE = 1UL,
    FLASH_enPROCESS_MASS_ERASE = 2UL,
    FLASH_enPROCESS_REGISTER_WRITE = 3UL,
    FLASH_enPROCESS_BUFFER_WRITE = 4UL,
    FLASH_enPROCESS_UNDEF = UNDEF_VALUE,
}FLASH_nPROCESS;

typedef enum
{
    FLASH_enPREFETCH_STATE_OFF = 0UL,
    FLASH_enPREFETCH_STATE_ON = 1UL,
    FLASH_enPREFETCH_STATE_UNDEF = UNDEF_VALUE,
}FLASH_nPREFETCH_STATE;

typedef enum
{
    FLASH_enERASED_YES = 0UL,
    FLASH_enERASED_NO = 1UL,
    FLASH_enERASED_UNDEF = UNDEF_VALUE,
}FLASH_nERASED;

typedef enum
{
    FLASH_enVARIABLE_BYTE = 0UL,
    FLASH_enVARIABLE_HALFWORD = 1UL,
    FLASH_enVARIABLE_WORD = 2UL,
    FLASH_enVARIABLE_UNDEF = UNDEF_VALUE,
}FLASH_nVARIABLE;

typedef enum
{
    FLASH_enCONSTANT_OFF = 0UL,
    FLASH_enCONSTANT_ON = 1UL,
    FLASH_enCONSTANT_UNDEF = UNDEF_VALUE,
}FLASH_nCONSTANT;

typedef MCU_Register_t FLASH_Register_t;
typedef MCU_pvfIRQVectorHandler_t FLASH_pvfIRQVectorHandler_t;
typedef MCU_pvfIRQSourceHandler_t FLASH_pvfIRQSourceHandler_t;

#endif /* XDRIVER_MCU_DRIVER_HEADER_FLASH_FLASH_ENUM_H_ */
